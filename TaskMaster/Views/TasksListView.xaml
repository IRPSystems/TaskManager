<UserControl x:Class="TaskMaster.Views.TasksListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" 
             xmlns:controls="clr-namespace:Controls.Views;assembly=Controls"
             xmlns:local="clr-namespace:TaskMaster.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/TaskMaster;component/Resources/TasksTemplate.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Controls;component/Resources/ButtonWithIcon.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="ListViewItem" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                <Style.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                </Style.Resources>
                
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>


    <UserControl.InputBindings>

        <KeyBinding Command="{Binding PastCommand}" 
                                Gesture="CTRL+V" />

        <KeyBinding Command="{Binding SaveCommand}" 
                                Gesture="CTRL+S" />

    </UserControl.InputBindings>


    <Grid Grid.Column="2" >
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>



            <Line Grid.ColumnSpan="4" VerticalAlignment="Top" X1="1" Stretch="Fill" Stroke="{DynamicResource MahApps.Brushes.Accent2}"/>

            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5,5,0,5">

                <Button Style="{StaticResource ButtonWithIconStyle}"
                                Width="40"
                                Margin="0,0,5,0"
                                ToolTip="Move task up"
                                Command="{Binding MoveTaskUpCommand}">
                    <iconPacks:PackIconMaterial Kind="ArrowUp" Width="30" Height="30"/>
                </Button>

                <Button Style="{StaticResource ButtonWithIconStyle}"
                                Width="40"
                                Margin="0,0,5,0"
                                ToolTip="Move task down"
                                Command="{Binding MoveTaskDownCommand}">
                    <iconPacks:PackIconMaterial Kind="ArrowDown" Width="30" Height="30"/>
                </Button>

                <Button Style="{StaticResource ButtonWithIconStyle}"
                                Width="40"
                                Margin="0,0,5,0"
                                ToolTip="Delete task"
                                Command="{Binding DeleteCommand}">
                    <iconPacks:PackIconMaterial Kind="Delete" Width="30" Height="30"/>
                </Button>

                <Button Style="{StaticResource ButtonWithIconStyle}"
                                Width="40"
                                Margin="0,0,5,0"
                                ToolTip="Copy task"
                                Command="{Binding CopyScriptTaskCommand}">
                    <iconPacks:PackIconMaterial Kind="ContentCopy" Width="30" Height="30"/>
                </Button>

                <Button Style="{StaticResource ButtonWithIconStyle}"
                                Width="40"
                                Margin="0,0,5,0"
                                ToolTip="Export to Word document"
                                Command="{Binding ExportScriptToPDFCommand}">
                    <iconPacks:PackIconMaterial Kind="FileExport" Width="30" Height="30"/>
                </Button>

            </StackPanel>


            <!--<StackPanel Grid.Column="2" Orientation="Horizontal" Margin="5,5,0,5">

                <Button Style="{StaticResource ButtonWithIconStyle}"
                                Width="40"
                                Margin="0,0,5,0"
                                ToolTip="Expand all"
                                Command="{Binding ScriptExpandAllCommand}">
                    <iconPacks:PackIconMaterial Kind="ArrowExpandAll" />
                </Button>

                <Button Style="{StaticResource ButtonWithIconStyle}"
                                Width="40"
                                Margin="0,0,5,0"
                                ToolTip="collapse all"
                                Command="{Binding ScriptCollapseAllCommand}">
                    <iconPacks:PackIconMaterial Kind="ArrowCollapseAll" />
                </Button>

            </StackPanel>-->

        </Grid>




        <ListView Grid.Row="1" 
                  ItemsSource="{Binding TasksList, UpdateSourceTrigger=PropertyChanged}"
                  Background="Transparent"
                  ItemTemplate="{StaticResource TaskTamplate}"
                  AllowDrop="True" >

            <ListView.InputBindings>

                <KeyBinding Command="{Binding CopyCommand}" 
                                Gesture="CTRL+C" />

                <KeyBinding Command="{Binding PastCommand}" 
                                Gesture="CTRL+V" />

                <KeyBinding Command="{Binding SaveCommand}" 
                                Gesture="CTRL+S" />

                <KeyBinding Command="{Binding DeleteCommand}" 
                                Gesture="Delete" />

            </ListView.InputBindings>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_MouseEnterCommand, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_PreviewMouseLeftButtonDownCommant, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_PreviewMouseLeftButtonUpCommant, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_MouseMoveCommand, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_SelectionChangedCommand, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>


                <i:EventTrigger EventName="Drop">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_DropCommand, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="DragEnter">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_DragEnterCommand, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="DragOver">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_DragOverCommand, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>




                <i:EventTrigger EventName="MouseEnter">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_MouseEnterCommand, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_PreviewMouseLeftButtonDownCommant, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_PreviewMouseLeftButtonUpCommant, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_MouseMoveCommand, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="PreviewKeyUp">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.TaskList_PreviewKeyUpCommand, 
                                                             Mode=OneWay, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>


            </i:Interaction.Triggers>

        </ListView>

    </Grid>
</UserControl>
